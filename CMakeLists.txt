cmake_minimum_required(VERSION 3.27)
project(prefix)

add_subdirectory(protobuf)
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/protobuf/LICENSE DESTINATION . RENAME LICENSE-protobuf.txt)
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/protobuf/third_party/abseil-cpp/LICENSE DESTINATION . RENAME LICENSE-abeil-cpp.txt)

set(SDL_VERSION "2.30.10")
set(SDL_NET_VERSION "2.2.0")
set(SDL_IMAGE_VERSION "2.8.3")
set(SDL_MIXER_VERSION "2.8.0")
set(GLEW_VERSION "2.2.0")
set(GLM_VERSION "1.0.1")

if(CMAKE_SIZEOF_VOID_P STREQUAL "4")
    set(GLEW_BIN_SUBDIR "Win32")
    set(SDL_ARCH "x86")
elseif(CMAKE_SIZEOF_VOID_P STREQUAL "8")
    set(GLEW_BIN_SUBDIR "x64")
    set(SDL_ARCH "x64")
endif()

#
# SDL
#
set(SDL_DEVEL_ARCHIVE "SDL2-devel-${SDL_VERSION}-VC.zip")
file(DOWNLOAD "https://github.com/libsdl-org/SDL/releases/download/release-${SDL_VERSION}/${SDL_DEVEL_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${SDL_DEVEL_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${SDL_DEVEL_ARCHIVE}")
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2-${SDL_VERSION}/cmake/ DESTINATION cmake)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2-${SDL_VERSION}/include/ DESTINATION include)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2-${SDL_VERSION}/lib/ DESTINATION lib)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/SDL2-${SDL_VERSION}/LICENSE.txt DESTINATION . RENAME LICENSE-SDL.txt)

set(SDL_BINARY_ARCHIVE "SDL2-${SDL_VERSION}-win32-${SDL_ARCH}.zip")
file(DOWNLOAD "https://github.com/libsdl-org/SDL/releases/download/release-${SDL_VERSION}/${SDL_BINARY_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${SDL_BINARY_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${SDL_BINARY_ARCHIVE}")
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/SDL2.dll DESTINATION bin)

#
# SDL_net
#
set(SDL_NET_DEVEL_ARCHIVE "SDL2_net-devel-${SDL_NET_VERSION}-VC.zip")
file(DOWNLOAD "https://github.com/libsdl-org/SDL_net/releases/download/release-${SDL_NET_VERSION}/${SDL_NET_DEVEL_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${SDL_NET_DEVEL_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${SDL_NET_DEVEL_ARCHIVE}")
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_net-${SDL_NET_VERSION}/cmake/ DESTINATION cmake)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_net-${SDL_NET_VERSION}/include/ DESTINATION include)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_net-${SDL_NET_VERSION}/lib/ DESTINATION lib)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/SDL2_net-${SDL_NET_VERSION}/LICENSE.txt DESTINATION . RENAME LICENSE-SDL_net.txt)

set(SDL_NET_BINARY_ARCHIVE "SDL2_net-${SDL_NET_VERSION}-win32-${SDL_ARCH}.zip")
file(DOWNLOAD "https://github.com/libsdl-org/SDL_net/releases/download/release-${SDL_NET_VERSION}/${SDL_NET_BINARY_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${SDL_NET_BINARY_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${SDL_NET_BINARY_ARCHIVE}")
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/SDL2_net.dll DESTINATION bin)

#
# SDL_image
#
set(SDL_IMAGE_DEVEL_ARCHIVE "SDL2_image-devel-${SDL_IMAGE_VERSION}-VC.zip")
file(DOWNLOAD "https://github.com/libsdl-org/SDL_image/releases/download/release-${SDL_IMAGE_VERSION}/${SDL_IMAGE_DEVEL_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${SDL_IMAGE_DEVEL_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${SDL_IMAGE_DEVEL_ARCHIVE}")
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_image-${SDL_IMAGE_VERSION}/cmake/ DESTINATION cmake)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_image-${SDL_IMAGE_VERSION}/include/ DESTINATION include)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_image-${SDL_IMAGE_VERSION}/lib/ DESTINATION lib)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/SDL2_image-${SDL_IMAGE_VERSION}/LICENSE.txt DESTINATION . RENAME LICENSE-SDL_image.txt)

set(SDL_IMAGE_BINARY_ARCHIVE "SDL2_image-${SDL_IMAGE_VERSION}-win32-${SDL_ARCH}.zip")
file(DOWNLOAD "https://github.com/libsdl-org/SDL_image/releases/download/release-${SDL_IMAGE_VERSION}/${SDL_IMAGE_BINARY_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${SDL_IMAGE_BINARY_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${SDL_IMAGE_BINARY_ARCHIVE}")
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/SDL2_image.dll DESTINATION bin)

#
# SDL_mixer
#
set(SDL_MIXER_DEVEL_ARCHIVE "SDL2_mixer-devel-${SDL_MIXER_VERSION}-VC.zip")
file(DOWNLOAD "https://github.com/libsdl-org/SDL_mixer/releases/download/release-${SDL_MIXER_VERSION}/${SDL_MIXER_DEVEL_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${SDL_MIXER_DEVEL_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${SDL_MIXER_DEVEL_ARCHIVE}")
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_mixer-${SDL_MIXER_VERSION}/cmake/ DESTINATION cmake)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_mixer-${SDL_MIXER_VERSION}/include/ DESTINATION include)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SDL2_mixer-${SDL_MIXER_VERSION}/lib/ DESTINATION lib)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/SDL2_mixer-${SDL_MIXER_VERSION}/LICENSE.txt DESTINATION . RENAME LICENSE-SDL_mixer.txt)

set(SDL_MIXER_BINARY_ARCHIVE "SDL2_mixer-${SDL_MIXER_VERSION}-win32-${SDL_ARCH}.zip")
file(DOWNLOAD "https://github.com/libsdl-org/SDL_mixer/releases/download/release-${SDL_MIXER_VERSION}/${SDL_MIXER_BINARY_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${SDL_MIXER_BINARY_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${SDL_MIXER_BINARY_ARCHIVE}")
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/SDL2_mixer.dll DESTINATION bin)

#
# GLEW
#
set(GLEW_ARCHIVE "glew-${GLEW_VERSION}-win32.zip")
file(DOWNLOAD "https://github.com/nigels-com/glew/releases/download/glew-${GLEW_VERSION}/${GLEW_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${GLEW_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${GLEW_ARCHIVE}")
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/glew-${GLEW_VERSION}/bin/Release/${GLEW_BIN_SUBDIR}/glew32.dll DESTINATION bin)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/glew-${GLEW_VERSION}/include/ DESTINATION include)
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/glew-${GLEW_VERSION}/lib/ DESTINATION lib)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/glew-${GLEW_VERSION}/LICENSE.txt DESTINATION . RENAME LICENSE-GLEW.txt)

#
# GLM
#
set(GLM_ARCHIVE "glm-${GLM_VERSION}-light.zip")
file(DOWNLOAD "https://github.com/g-truc/glm/releases/download/${GLM_VERSION}/${GLM_ARCHIVE}"
    "${CMAKE_CURRENT_BINARY_DIR}/${GLM_ARCHIVE}")
file(ARCHIVE_EXTRACT INPUT "${CMAKE_CURRENT_BINARY_DIR}/${GLM_ARCHIVE}")
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/glm DESTINATION include)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/glm/copying.txt DESTINATION . RENAME LICENSE-glm.txt)
